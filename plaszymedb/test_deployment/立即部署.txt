==================================================================
🚀 立即部署到 EC2 - 超简单 3 步法
==================================================================

【重要】这次修复了什么？
-------------------------
之前只修复了 URL 编码，但 API 读错了 CSV 文件！
现在修复了 API，让它读取包含完整 PLZ_ID（带分号）的文件。

==================================================================

步骤 1: 打开 Git Bash 或 PowerShell
-------------------------------------
在项目文件夹右键 → Git Bash Here

或者在 PowerShell 中：
cd C:\xampp\htdocs\plaszymedb


步骤 2: 运行部署脚本
-------------------------------------
bash deploy_semicolon_fix.sh 18.237.158.100

（把 18.237.158.100 替换成您的 EC2 IP）


步骤 3: 浏览器测试
-------------------------------------
打开: http://YOUR_EC2_IP/test_semicolon_fix.html

点击 4 个测试按钮，确认都显示：
✅ 成功！PLZ ID: xxx, XID: Xxxx, PDB 大小: xxx bytes

==================================================================

如果脚本不工作，手动部署：
==================================================================

方法 A: 用 WinSCP 或 FileZilla
-------------------------------
1. 连接到 EC2 (使用 PlaszymeDB_AWS.pem 密钥)
2. 上传以下文件到 /var/www/html/:
   - api_protein_structure.php  (最关键！)
   - protein_viewer_optimized.js
   - protein_3d_viewer.js
   - test_semicolon_fix.html

方法 B: 用 SCP 命令
-------------------------------
在 PowerShell 或 Git Bash 中运行：

scp -i PlaszymeDB_AWS.pem ^
    api_protein_structure.php ^
    protein_viewer_optimized.js ^
    protein_3d_viewer.js ^
    test_semicolon_fix.html ^
    ec2-user@YOUR_EC2_IP:/var/www/html/

（注意：替换 YOUR_EC2_IP）

==================================================================

核心修改说明：
==================================================================

修改的关键代码（在 api_protein_structure.php 中）：

1. 改用正确的 CSV 文件：
   旧: pred_metadata_XID.csv  (只有第一个 PLZ_ID)
   新: PLZ_XID.csv           (包含完整的 original_PLZ_IDs)

2. 读取正确的列：
   优先读取 "original_PLZ_IDs" 列
   这个列包含完整的带分号的 PLZ_ID

3. 为什么之前不工作？
   - 数据库存储: 98b7748823;e79726b180
   - 旧 CSV 只有: 98b7748823  ❌
   - 新 CSV 完整: 98b7748823;e79726b180  ✅

==================================================================

测试验证：
==================================================================

在浏览器控制台（F12）中应该看到：

✅ 成功案例:
   X0002: PLZ_ID "98b7748823;e79726b180" → 找到 X0002.pdb
   X0003: PLZ_ID "60ea077c8e;8992bea4a0" → 找到 X0003.pdb
   X0009: PLZ_ID "bb22e38599;75d1d6dced;788e7e51f7" → 找到 X0009.pdb
   X0001: PLZ_ID "866554aa77" → 找到 X0001.pdb

❌ 如果仍然失败:
   1. 检查 EC2 上是否有 PLZ_XID.csv 文件
   2. SSH 登录检查: ls -lh /var/www/html/structure_data/predicted_xid/PLZ_XID.csv
   3. 如果没有，需要上传整个 structure_data 文件夹

==================================================================

需要帮助？检查这些文件：
==================================================================

📄 FINAL_FIX_SUMMARY.md - 详细的修复说明
📄 EC2部署步骤.txt - 分步部署指南
📄 deploy_semicolon_fix.sh - 自动部署脚本

==================================================================

最重要的一点：
==================================================================

这次修复了 **根本原因** - 不只是 URL 编码，而是 API 读取
数据的来源。现在 API 能从 PLZ_XID.csv 中读取完整的带分号的
PLZ_ID，并正确映射到 XID！

祝部署顺利！🎉

